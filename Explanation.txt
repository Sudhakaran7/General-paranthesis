Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
For example, given n = 3, a solution set is:
((())) (()()) (())() ()(()) ()()()

Input Desription:
n an integers as a input.

Output Description:
Print n pairs of parentheses.

Sample Input:
3

Sample Output:
((())) (()()) (())() ()(()) ()()()

Explanation:
The n is 3, so the set are ((())) (()()) (())() ()(()) ()()()

Sample Input:
2

Sample Output:
(()) ()()

Sample Input:
4

Sample Output:
(((()))) ((()())) ((())()) ((()))() (()(())) (()()()) (()())() (())(()) (())()() ()((())) ()(()()) ()(())() ()()(()) ()()()()

Sample Input:
5

Sample Output:
((((())))) (((()()))) (((())())) (((()))()) (((())))() ((()(()))) ((()()())) ((()())()) ((()()))() ((())(())) ((())()()) ((())())() ((()))(()) ((()))()() (()((()))) (()(()())) (()(())()) (()(()))() (()()(())) (()()()()) (()()())() (()())(()) (()())()() (())((())) (())(()()) (())(())() (())()(()) (())()()() ()(((()))) ()((()())) ()((())()) ()((()))() ()(()(())) ()(()()()) ()(()())() ()(())(()) ()(())()() ()()((())) ()()(()()) ()()(())() ()()()(()) ()()()()()

Sample Input:
1

Sample Output:
()

Sample Input:
6

Sample Output:

